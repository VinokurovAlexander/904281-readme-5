// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider = "prisma-client-js"
    output   = "../../../node_modules/.prisma/client"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Post {
    id         String    @id @default(uuid())
    userId     String
    createdAt  DateTime  @default(now()) @map("created_at")
    updatedAt  DateTime  @updatedAt @map("updated_at")
    title      String
    content    String
    category   Category  @relation(fields: [categoryId], references: [id])
    categoryId String    @map("category_id")
    comments   Comment[]
    likes      Like[]
    reposts    Repost[]

    @@map("posts")
}

model Category {
    id    String @id @default(uuid())
    title String
    posts Post[]

    @@index([title])
    @@map("categories")
}

model Comment {
    id        String   @id @default(uuid())
    text      String
    userId    String   @map("user_id")
    Post      Post     @relation(fields: [postId], references: [id])
    postId    String   @map("post_id")
    createdAt DateTime @default(now()) @map("created_at")

    @@map("comments")
}

model Like {
    id        String   @id @default(uuid())
    Post      Post     @relation(fields: [postId], references: [id])
    postId    String   @map("post_id")
    createdAt DateTime @default(now()) @map("created_at")
    userId    String   @map("user_id")

    @@map("likes")
}

model Repost {
    id        String   @id @default(uuid())
    post      Post     @relation(fields: [postId], references: [id])
    postId    String   @map("post_id")
    createdAt DateTime @default(now()) @map("created_at")
    userId    String   @map("user_id")

    @@map("reposts")
}
